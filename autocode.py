import os
import xml.etree.ElementTree as XMLElementTree
import generators

data = XMLElementTree.parse("data.xml").getroot()

# PlaceholderTupleArrayExample: "[("!!AUTOGENERATED CODE!!", generatorA)]"
def autocode(templateFilePath, outputFilePath, placeholderGeneratorTupleArray):
    # Load and prepare the template
    code = ""
    with open("templates/" + templateFilePath, mode="rt") as templateFile:
        for line in templateFile:
            code += line
    if code is "":
        raise Exception("Template file is empty.")
    
    # Locate placeholders and run autocoders
    for t in placeholderGeneratorTupleArray:
        placeholder = "/**" + t[0] + "**/"
        generator = t[1]
        if placeholder not in code:
            raise Exception("Could not find placeholder '" + placeholder + "' in template file 'templates/" + templateFilePath + "'")
        generatedCode = "\n/* Autogenerated Code Begins */\n" + generator(data) + "\n/* Autogenerated Code Ends */\n"
        code = code.replace(placeholder, generatedCode)

    # Make sure the output directory exists
    try:
        os.mkdir("output")
    except:
        pass

    # Write code to output
    with open("output/" + outputFilePath, mode="w+") as out:
        out.write(code)

autocode("data.template.h", "data.h", [("!!AUTOGENERATE HERE!!", generators.generateDataHeader)])